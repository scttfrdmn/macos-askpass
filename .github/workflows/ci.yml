name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate scripts
      run: |
        echo "🔍 Validating script syntax..."
        bash -n bin/askpass
        bash -n install.sh
        bash -n tests/integration-test.sh
        echo "✅ All scripts have valid syntax"
    
    - name: Run shellcheck (if available)
      run: |
        if command -v shellcheck >/dev/null 2>&1; then
          echo "🔍 Running shellcheck..."
          shellcheck bin/askpass install.sh tests/integration-test.sh
          echo "✅ Shellcheck passed"
        else
          echo "⚠️  Shellcheck not available, skipping"
        fi
    
    - name: Test basic functionality
      run: |
        echo "🧪 Testing basic functionality..."
        
        # Test version command
        ./bin/askpass version
        
        # Test help command
        ./bin/askpass help
        
        # Test config command
        ./bin/askpass config
        
        echo "✅ Basic functionality tests passed"
    
    - name: Test environment detection
      run: |
        echo "🧪 Testing environment detection..."
        
        # Test CI environment detection
        CI=true ./bin/askpass config | grep "GUI.*Not available"
        
        # Test force CLI mode
        ASKPASS_FORCE_CLI=1 ./bin/askpass config | grep "Force CLI: 1"
        
        echo "✅ Environment detection tests passed"
    
    - name: Test password retrieval with environment variables
      run: |
        echo "🧪 Testing password retrieval..."
        
        # Test CI password
        CI_SUDO_PASSWORD="test_ci_password" ./bin/askpass | grep -q "test_ci_password"
        
        # Test local password (should override if CI password not set)
        SUDO_PASSWORD="test_local_password" ./bin/askpass | grep -q "test_local_password"
        
        # Test priority (CI should override local)
        output=$(CI_SUDO_PASSWORD="test_ci" SUDO_PASSWORD="test_local" ./bin/askpass)
        if [ "$output" = "test_ci" ]; then
          echo "✅ Priority system working correctly"
        else
          echo "❌ Priority system failed: got '$output', expected 'test_ci'"
          exit 1
        fi
        
        echo "✅ Password retrieval tests passed"
    
    - name: Test Makefile targets
      run: |
        echo "🧪 Testing Makefile targets..."
        
        # Test help
        make help
        
        # Test lint
        make lint
        
        # Test basic test (without sudo)
        SUDO_PASSWORD="test" make test || echo "Expected test failure without real sudo access"
        
        # Test build
        make build
        
        echo "✅ Makefile tests passed"
    
    - name: Run integration tests
      run: |
        echo "🧪 Running integration test suite..."
        
        # Run tests without sudo (will skip sudo-specific tests)
        ./tests/integration-test.sh
        
        echo "✅ Integration tests completed"
    
    - name: Test installation script
      run: |
        echo "🧪 Testing installation script..."
        
        # Test dry-run functionality (would need to be implemented)
        # For now, just validate syntax and help
        ./install.sh help
        
        echo "✅ Installation script tests passed"
    
    - name: Validate documentation
      run: |
        echo "🧪 Validating documentation..."
        
        # Check that key files exist
        [ -f README.md ] || { echo "❌ README.md missing"; exit 1; }
        [ -f LICENSE ] || { echo "❌ LICENSE missing"; exit 1; }
        [ -f docs/SECURITY.md ] || { echo "❌ SECURITY.md missing"; exit 1; }
        
        # Check for basic content in README
        grep -q "macOS ASKPASS" README.md || { echo "❌ README missing title"; exit 1; }
        grep -q "Installation" README.md || { echo "❌ README missing installation"; exit 1; }
        
        echo "✅ Documentation validation passed"
    
    - name: Test examples
      run: |
        echo "🧪 Validating examples..."
        
        # Check that example files exist and are valid
        [ -f examples/github-actions.yml ] || { echo "❌ GitHub Actions example missing"; exit 1; }
        [ -f examples/jenkins-pipeline.groovy ] || { echo "❌ Jenkins example missing"; exit 1; }
        [ -f examples/makefile-integration ] || { echo "❌ Makefile example missing"; exit 1; }
        
        echo "✅ Examples validation passed"

  security-scan:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security checks
      run: |
        echo "🔒 Running security checks..."
        
        # Check for hardcoded credentials (basic patterns)
        ! grep -r "password.*=" . --exclude-dir=.git --exclude="*.md" | grep -v "test" | grep -v "example"
        
        # Check for suspicious shell patterns
        ! grep -r "eval.*\$" bin/ --exclude-dir=.git
        ! grep -r "exec.*\$" bin/ --exclude-dir=.git
        
        # Check file permissions
        [ "$(stat -f '%Lp' bin/askpass)" = "755" ] || { echo "❌ askpass has wrong permissions"; exit 1; }
        
        echo "✅ Security checks passed"
    
    - name: Check for secrets in code
      run: |
        echo "🔒 Checking for potential secrets..."
        
        # Use a simple pattern to check for base64-like strings that might be secrets
        ! grep -r "[A-Za-z0-9+/]\{32,\}" . --exclude-dir=.git --exclude="*.md" --exclude="checksums.txt"
        
        echo "✅ No suspicious secrets found"